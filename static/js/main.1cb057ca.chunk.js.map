{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","error","editState","target","newValue","name","setState","value","this","onSubmit","event","preventDefault","trim","props","addedMovie","placeholder","type","onChange","ClassNames","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"+xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,2BCrBGK,G,MAAb,4MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,GACRG,OAAO,GAPX,EAUEC,UAAY,YAAiB,IAAdC,EAAa,EAAbA,OACPC,EAAWD,EAAOE,KAExB,EAAKC,SAAL,aACEL,OAAO,GACNG,EAAWD,EAAOI,SAfzB,uDAmBY,IAAD,SACwDC,KAAKR,MAA5DhB,EADD,EACCA,MAAOC,EADR,EACQA,YAAaC,EADrB,EACqBA,OAAQC,EAD7B,EAC6BA,QAASW,EADtC,EACsCA,OAAQG,EAD9C,EAC8CA,MAErD,OACE,0BACEQ,SAAU,SAACC,GACTA,EAAMC,iBAEH3B,EAAM4B,QACH3B,EAAY2B,QACZ1B,EAAO0B,QACPzB,EAAQyB,QACRd,EAAOc,QASb,EAAKC,MAAMC,WAAW,EAAKd,OAE3B,EAAKM,SAAS,CACZtB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,GACRG,OAAO,KAfP,EAAKK,SAAS,CACZL,OAAO,MAkBb,2BAAOb,UAAU,mBACf,mDACA,2BACEA,UAAU,kBACV2B,YAAY,QACZC,KAAK,OACLT,MAAOC,KAAKR,MAAMhB,MAClBqB,KAAK,QACLY,SAAU,SAAAP,GAAK,OAAI,EAAKR,UAAUQ,OAItC,2BAAOtB,UAAU,mBACf,6CACA,8BACEA,UAAU,2CACV2B,YAAY,cACZR,MAAOC,KAAKR,MAAMf,YAClBoB,KAAK,cACLY,SAAU,SAAAP,GAAK,OAAI,EAAKR,UAAUQ,OAItC,2BAAOtB,UAAU,mBACf,gDACA,2BACEA,UAAU,kBACV2B,YAAY,uBACZC,KAAK,MACLT,MAAOC,KAAKR,MAAMd,OAClBmB,KAAK,SACLY,SAAU,SAAAP,GAAK,OAAI,EAAKR,UAAUQ,OAItC,2BAAOtB,UAAU,mBACf,2CACA,2BACEA,UAAU,kBACV2B,YAAY,sBACZC,KAAK,MACLT,MAAOC,KAAKR,MAAMb,QAClBkB,KAAK,UACLY,SAAU,SAAAP,GAAK,OAAI,EAAKR,UAAUQ,OAItC,2BAAOtB,UAAU,mBACf,4CACA,2BACEA,UAAU,kBACV2B,YAAY,mBACZC,KAAK,OACLT,MAAOC,KAAKR,MAAMF,OAClBO,KAAK,SACLY,SAAU,SAAAP,GAAK,OAAI,EAAKR,UAAUQ,OAItC,4BACEtB,UAAW8B,IACT,0CACA,CAAE,yBAA0BjB,IAE9Be,KAAK,UALP,QAWGf,GAEC,uBAAGb,UAAU,mBAAb,8BA5HZ,GAA8B+B,c,OCCjBC,EAAb,4MACEpB,MAAQ,CACNN,OAAQ2B,GAFZ,EAKEC,SAAW,YAAsD,IAAnDtC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,QAASW,EAAa,EAAbA,OACjD,EAAKQ,UAAS,SAAAN,GAAK,MAAK,CACtBN,OAAO,GAAD,mBACDM,EAAMN,QADL,CAEJ,CACEV,QACAC,cACAE,UACAD,SACAY,iBAdV,uDAoBY,IACAJ,EAAWc,KAAKR,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAU0B,WAAYN,KAAKc,iBA7BrC,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1cb057ca.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    error: false,\n  };\n\n  editState = ({ target }) => {\n    const newValue = target.name;\n\n    this.setState({\n      error: false,\n      [newValue]: target.value,\n    });\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId, error } = this.state;\n\n    return (\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (\n            !title.trim()\n            || !description.trim()\n            || !imgUrl.trim()\n            || !imdbUrl.trim()\n            || !imdbId.trim()\n          ) {\n            this.setState({\n              error: true,\n            });\n\n            return;\n          }\n\n          this.props.addedMovie(this.state);\n\n          this.setState({\n            title: '',\n            description: '',\n            imgUrl: '',\n            imdbUrl: '',\n            imdbId: '',\n            error: false,\n          });\n        }}\n      >\n        <label className=\"newMovie__label\">\n          <span>Name of the movie</span>\n          <input\n            className=\"newMovie__input\"\n            placeholder=\"Title\"\n            type=\"text\"\n            value={this.state.title}\n            name=\"title\"\n            onChange={event => this.editState(event)}\n          />\n        </label>\n\n        <label className=\"newMovie__label\">\n          <span>Description</span>\n          <textarea\n            className=\"newMovie__input newMovie__input-textarea\"\n            placeholder=\"Description\"\n            value={this.state.description}\n            name=\"description\"\n            onChange={event => this.editState(event)}\n          />\n        </label>\n\n        <label className=\"newMovie__label\">\n          <span>Link for image</span>\n          <input\n            className=\"newMovie__input\"\n            placeholder=\"Enter link for image\"\n            type=\"url\"\n            value={this.state.imgUrl}\n            name=\"imgUrl\"\n            onChange={event => this.editState(event)}\n          />\n        </label>\n\n        <label className=\"newMovie__label\">\n          <span>IMDb link</span>\n          <input\n            className=\"newMovie__input\"\n            placeholder=\"Enter the IMDb link\"\n            type=\"url\"\n            value={this.state.imdbUrl}\n            name=\"imdbUrl\"\n            onChange={event => this.editState(event)}\n          />\n        </label>\n\n        <label className=\"newMovie__label\">\n          <span>ID on IMDb</span>\n          <input\n            className=\"newMovie__input\"\n            placeholder=\"Enter ID on IMDb\"\n            type=\"text\"\n            value={this.state.imdbId}\n            name=\"imdbId\"\n            onChange={event => this.editState(event)}\n          />\n        </label>\n\n        <button\n          className={ClassNames(\n            'newMovie__input newMovie__input__button',\n            { ' newMovie__input-error': error },\n          )}\n          type=\"submit\"\n        >\n          Add\n        </button>\n\n        {\n          !error\n          || (\n            <p className=\"newMovie__error\">\n              Please, fill gaps in!\n            </p>\n          )\n        }\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addedMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = ({ title, description, imgUrl, imdbUrl, imdbId }) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        {\n          title,\n          description,\n          imdbUrl,\n          imgUrl,\n          imdbId,\n        },\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addedMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}